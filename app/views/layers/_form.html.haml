#layer-form.row
  .span12
    - layer.errors.full_messages.each do |msg|
      .alert.alert-error= msg
    = form_for layer, html: { class: 'form-horizontals' } do |f|
      %fieldset.form-horizontal
        .control-group
          = f.label :slug, class: 'control-label'
          .controls
            = f.text_field :slug
        
        .control-group
          = f.label :name, class: 'control-label'
          .controls
            = f.text_field :name, class: 'input-xlarge'
        
        .control-group
          = f.label :projection, class: 'control-label'
          .controls
            = f.select :projection, ['EPSG:4326', 'EPSG:3338', 'ORTHOGRAPHIC']
        
        .control-group
          = f.select :data_type, ['upload', 'geojson', 'gpx', 'proxy'], {}, class: 'control-label'
          #data
            .controls
              - case (params[:data_type].nil? ? layer.data_type.try(:to_sym) : params[:data_type].to_sym)
              - when :geojson
                = f.text_area :data_value, class: 'span8'
              - when :gpx
                = f.text_area :data_value, class: 'span8'
              - when :proxy
                = f.text_field :data_value, class: 'input-xlarge'
              - else
                .fileupload.fileupload-new{ "data-fileupload"=>"file" }
                  .fileupload-preview.uneditable-input
                  %span.btn.btn-file
                    %span.fileupload-new Select file
                    %span.fileupload-exists Change
                    = f.file_field :upload, class: 'input-xlarge'
      %fieldset.form-horizontal
        %ul.nav.nav-tabs
          %li= link_to 'Style', '#style', "data-toggle" => "tab"
          %li= link_to 'Rules', '#rules', "data-toggle" => "tab"
          %li= link_to 'Filter', '#filters', "data-toggle" => "tab"
        .tab-content
          #style.tab-pane.active
            = f.fields_for(layer.new_record? ? layer.build_style : layer.style) do |builder|
              = render 'style_form', f: builder     
          #rules.tab-pane
            = render 'rule_forms', f: f, rules: layer.rules
          #filters.tab-pane.row
            = f.fields_for(layer.new_record? ? {} : layer.filter) do |builder|
              = render 'filter_form', f: builder, filter: layer.filter
      .form-actions
        .pull-right
          = link_to 'Close', admin_path, class: 'btn btn-large'
          = f.submit class: 'btn btn-primary btn-large'
:javascript
  $('#layer_data_type').on('change', function(e) {
    var action = $('#layer-form form').prop('action')
    $('#data').load('#{layer.new_record? ? new_layer_path : edit_layer_path(layer)} #data', 
      'data_type=' + $(e.target).find('option:selected').val()
    );
  })
  #{ add_js_errors_for(layer) }